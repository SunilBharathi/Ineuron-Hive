This is a real time dataset of the ineuron technical consultant team. You have to perform hive analysis on this given dataset.

Download Dataset 1 - https://drive.google.com/file/d/1WrG-9qv6atP-W3P_-gYln1hHyFKRKMHP/view

Download Dataset 2 - https://drive.google.com/file/d/1-JIPCZ34dyN6k9CqJa-Y8yxIGq6vTVXU/view

Note: both files are csv files.

1. Create a schema based on the given dataset

create table Agent Performance 
(
 SL_No int,
 Date string,
 Agent Name string,
 Total_Chats int,
 Average Response Time string,
 Average Resolution Time string,
 Average Rating float,
 Total Feedback int
 ) 
row format delimited
fields terminated by ','
TBLPROPERTIES ("skip.header.line.count"="1");

create table AgentLogingReport
(
SL_No int,
Date string,
Login_Time string,
Logout_Time string,
Duration string
)
row format delimited
fields terminated by ','
TBLPROPERTIES ("skip.header.line.count"="1");


2. Dump the data inside the hdfs in the given schema location.

load data local inpath 'file:///home/cloudera/AgentPerformance.csv' into table AgentPerformance;

load data local inpath 'file:///home/cloudera/AgentLoggingReport.csv' into table AgentLoggingReport;

3. List of all agents' names.

select Agent_Name from AgentPerformance;

4. Find out agent average rating.

select agent_name,round(avg(average_rating),2) avg_rating from agentperformance where total_chats>0 group by agent_name;

5. Total working days for each agents

select Agent_Name,count(distinct date) No_of_Working_Days from AgentLogingReport group by Agent_Name;

6. Total query that each agent have taken 

select Agent_Name,sum(total_chats) Total_queries from AgentPerformance group by Agent_Name;

7. Total Feedback that each agent have received 

select agent_name,sum(total_feedback) total_feed_feedback from agentperformance group by agent_name;

8. Agent name who have average rating between 3.5 to 4 

select agent_name,round(avg(average_rating),2) avg_rating from agentperformance where total_chats>0 group by agent_name having avg(average_rating) between  3.5 and 4;

9. Agent name who have rating less than 3.5 

select agent_name,round(avg(average_rating),2) avg_rating from agentperformance where total_chats>0 group by agent_name having avg(average_rating) < 3.5;

10. Agent name who have rating more than 4.5

select agent_name,round(avg(average_rating),2) avg_rating from agentperformance where total_chats>0 group by agent_name having avg(average_rating) > 4.5;

11. How many feedback agents have received more than 4.5 average

select agent_name,sum(total_feedback) total_feedback from agentperformance where total_chats>0 group by agent_name having avg(average_rating)>4.5;

12. average weekly response time for each agent 

select agent_name,
date_format(from_unix time(unix_timestamp(date,'MM/dd/yyyy')),'W') week_of_month,
round (avg(3600*hour(average_response_time) + 60*minute (average_response_time)),2) avg_response_time_in_seconds from agentperformance where total_chats>0
group by agent_name, date_format(from_unixtime(unix_timestamp(date,'MM/dd//yyyy')),'W';

13. average weekly resolution time for each agents 

select agent_name,
date_format(from_unix time(unix_timestamp(date,'MM/dd/yyyy')),'W') week_of_month,
round (avg(60*hour(average_resolution_time) + minute (average_resolution_time) + second(average_resolution_time)/60),2) avg_resolution_time_in_minutes from agentperformance where total_chats>0
group by agent_name, date_format(from_unixtime(unix_timestamp(date,'MM/dd//yyyy')),'W';

14. Find the number of chat on which they have received a feedback 

select agent_name,sum(total_chats) total_chats,sum(total_feedback) total_feedback from agentperformance group by agent_name;

15. Total contribution hour for each and every agents weekly basis 



16. Perform inner join, left join and right join based on the agent column and after joining the table export that data into your local system.



17. Perform partitioning on top of the agent column and then on top of that perform bucketing for each partitioning.














